{"/home/travis/build/npmtest/node-npmtest-checkit/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_checkit */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-checkit/lib.npmtest_checkit.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/lib.npmtest_checkit.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_checkit */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_checkit = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_checkit = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-checkit/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-checkit && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_checkit */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_checkit","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_checkit.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_checkit.rollup.js'] =","            local.assetsDict['/assets.npmtest_checkit.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_checkit.__dirname + '/lib.npmtest_checkit.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}}},"branchMap":{},"code":["var _ = require('./lodash-requires')","module.exports = require('./core')(_, global.Promise)",""],"l":{"1":1,"2":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lodash-requires.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lodash-requires.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":47,"column":1}}},"branchMap":{},"code":["/*"," * This file is to help reduce the size for the browser case and memory"," * usage in both browser and Node"," */","","module.exports = {","  clone: require('lodash/clone'),","  cloneDeep: require('lodash/cloneDeep'),","  each: require('lodash/each'),","  extend: require('lodash/extend'),","  filter: require('lodash/filter'),","  find: require('lodash/find'),","  forEach: require('lodash/forEach'),","  has: require('lodash/has'),","  head: require('lodash/head'),","  includes: require('lodash/includes'),","  indexOf: require('lodash/indexOf'),","  initial: require('lodash/initial'),","  invert: require('lodash/invert'),","  invokeMap: require('lodash/invokeMap'),","  isArguments: require('lodash/isArguments'),","  isArray: require('lodash/isArray'),","  isBoolean: require('lodash/isBoolean'),","  isEmpty: require('lodash/isEmpty'),","  isEqual: require('lodash/isEqual'),","  isFunction: require('lodash/isFunction'),","  isNaN: require('lodash/isNaN'),","  isNumber: require('lodash/isNumber'),","  isObject: require('lodash/isObject'),","  isPlainObject: require('lodash/isPlainObject'),","  isString: require('lodash/isString'),","  keys: require('lodash/keys'),","  last: require('lodash/last'),","  map: require('lodash/map'),","  omit: require('lodash/omit'),","  pick: require('lodash/pick'),","  reduce: require('lodash/reduce'),","  reduceRight: require('lodash/reduceRight'),","  reject: require('lodash/reject'),","  shuffle: require('lodash/shuffle'),","  size: require('lodash/size'),","  tail: require('lodash/tail'),","  toArray: require('lodash/toArray'),","  toPairs: require('lodash/toPairs'),","  transform: require('lodash/transform'),","  values: require('lodash/values')","}",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/core.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":1,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":1,"189":0,"190":0,"191":1,"192":0,"193":1,"194":1,"195":0,"196":1,"197":1,"198":0,"199":1,"200":0,"201":0,"202":1,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":1,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":1,"222":1,"223":1,"224":19,"225":0,"226":1,"227":17,"228":0,"229":1,"230":1,"231":0,"232":1,"233":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0],"47":[0,0,0],"48":[0,0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":19,"68":0,"69":17,"70":0,"71":0,"72":0,"73":0,"74":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}}},"2":{"name":"Checkit","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":26},"end":{"line":28,"column":61}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":55}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":33},"end":{"line":44,"column":59}}},"6":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":31},"end":{"line":52,"column":51}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":41}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":16},"end":{"line":85,"column":50}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":58},"end":{"line":92,"column":72}}},"10":{"name":"(anonymous_10)","line":98,"loc":{"start":{"line":98,"column":20},"end":{"line":98,"column":48}}},"11":{"name":"checkSync","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":44}}},"12":{"name":"Runner","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":42}}},"13":{"name":"(anonymous_13)","line":124,"loc":{"start":{"line":124,"column":23},"end":{"line":124,"column":49}}},"14":{"name":"(anonymous_14)","line":132,"loc":{"start":{"line":132,"column":52},"end":{"line":132,"column":74}}},"15":{"name":"(anonymous_15)","line":134,"loc":{"start":{"line":134,"column":12},"end":{"line":134,"column":29}}},"16":{"name":"(anonymous_16)","line":138,"loc":{"start":{"line":138,"column":13},"end":{"line":138,"column":24}}},"17":{"name":"(anonymous_17)","line":142,"loc":{"start":{"line":142,"column":10},"end":{"line":142,"column":21}}},"18":{"name":"(anonymous_18)","line":144,"loc":{"start":{"line":144,"column":29},"end":{"line":144,"column":56}}},"19":{"name":"(anonymous_19)","line":145,"loc":{"start":{"line":145,"column":28},"end":{"line":145,"column":49}}},"20":{"name":"(anonymous_20)","line":151,"loc":{"start":{"line":151,"column":10},"end":{"line":151,"column":21}}},"21":{"name":"addVerifiedConditional","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":58}}},"22":{"name":"(anonymous_22)","line":164,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":44}}},"23":{"name":"checkConditional","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":47}}},"24":{"name":"getVal","line":181,"loc":{"start":{"line":181,"column":0},"end":{"line":181,"column":28}}},"25":{"name":"processItem","line":191,"loc":{"start":{"line":191,"column":0},"end":{"line":191,"column":62}}},"26":{"name":"processItemAsync","line":211,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":67}}},"27":{"name":"(anonymous_27)","line":212,"loc":{"start":{"line":212,"column":36},"end":{"line":212,"column":47}}},"28":{"name":"addError","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":43}}},"29":{"name":"(anonymous_29)","line":218,"loc":{"start":{"line":218,"column":9},"end":{"line":218,"column":23}}},"30":{"name":"runRule","line":229,"loc":{"start":{"line":229,"column":0},"end":{"line":229,"column":50}}},"31":{"name":"SyncRunner","line":252,"loc":{"start":{"line":252,"column":0},"end":{"line":252,"column":22}}},"32":{"name":"(anonymous_32)","line":258,"loc":{"start":{"line":258,"column":27},"end":{"line":258,"column":38}}},"33":{"name":"(anonymous_33)","line":265,"loc":{"start":{"line":265,"column":27},"end":{"line":265,"column":49}}},"34":{"name":"(anonymous_34)","line":271,"loc":{"start":{"line":271,"column":25},"end":{"line":271,"column":52}}},"35":{"name":"(anonymous_35)","line":272,"loc":{"start":{"line":272,"column":24},"end":{"line":272,"column":45}}},"36":{"name":"Validator","line":291,"loc":{"start":{"line":291,"column":0},"end":{"line":291,"column":37}}},"37":{"name":"(anonymous_37)","line":299,"loc":{"start":{"line":299,"column":12},"end":{"line":299,"column":26}}},"38":{"name":"(anonymous_38)","line":304,"loc":{"start":{"line":304,"column":11},"end":{"line":304,"column":35}}},"39":{"name":"(anonymous_39)","line":311,"loc":{"start":{"line":311,"column":9},"end":{"line":311,"column":33}}},"40":{"name":"(anonymous_40)","line":318,"loc":{"start":{"line":318,"column":12},"end":{"line":318,"column":32}}},"41":{"name":"(anonymous_41)","line":327,"loc":{"start":{"line":327,"column":13},"end":{"line":327,"column":34}}},"42":{"name":"(anonymous_42)","line":332,"loc":{"start":{"line":332,"column":15},"end":{"line":332,"column":37}}},"43":{"name":"(anonymous_43)","line":337,"loc":{"start":{"line":337,"column":10},"end":{"line":337,"column":24}}},"44":{"name":"(anonymous_44)","line":342,"loc":{"start":{"line":342,"column":12},"end":{"line":342,"column":26}}},"45":{"name":"(anonymous_45)","line":347,"loc":{"start":{"line":347,"column":16},"end":{"line":347,"column":37}}},"46":{"name":"(anonymous_46)","line":352,"loc":{"start":{"line":352,"column":13},"end":{"line":352,"column":35}}},"47":{"name":"(anonymous_47)","line":357,"loc":{"start":{"line":357,"column":13},"end":{"line":357,"column":35}}},"48":{"name":"(anonymous_48)","line":362,"loc":{"start":{"line":362,"column":15},"end":{"line":362,"column":36}}},"49":{"name":"(anonymous_49)","line":367,"loc":{"start":{"line":367,"column":22},"end":{"line":367,"column":43}}},"50":{"name":"(anonymous_50)","line":372,"loc":{"start":{"line":372,"column":12},"end":{"line":372,"column":33}}},"51":{"name":"(anonymous_51)","line":377,"loc":{"start":{"line":377,"column":19},"end":{"line":377,"column":40}}},"52":{"name":"(anonymous_52)","line":382,"loc":{"start":{"line":382,"column":10},"end":{"line":382,"column":24}}},"53":{"name":"checkInt","line":393,"loc":{"start":{"line":393,"column":0},"end":{"line":393,"column":23}}},"54":{"name":"checkNumber","line":398,"loc":{"start":{"line":398,"column":0},"end":{"line":398,"column":26}}},"55":{"name":"numeric","line":403,"loc":{"start":{"line":403,"column":0},"end":{"line":403,"column":22}}},"56":{"name":"ValidationError","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":34}}},"57":{"name":"(anonymous_57)","line":435,"loc":{"start":{"line":435,"column":37},"end":{"line":435,"column":48}}},"58":{"name":"FieldError","line":443,"loc":{"start":{"line":443,"column":0},"end":{"line":443,"column":29}}},"59":{"name":"(anonymous_59)","line":454,"loc":{"start":{"line":454,"column":12},"end":{"line":454,"column":27}}},"60":{"name":"(anonymous_60)","line":462,"loc":{"start":{"line":462,"column":10},"end":{"line":462,"column":21}}},"61":{"name":"(anonymous_61)","line":463,"loc":{"start":{"line":463,"column":20},"end":{"line":463,"column":34}}},"62":{"name":"CheckitError","line":474,"loc":{"start":{"line":474,"column":0},"end":{"line":474,"column":31}}},"63":{"name":"(anonymous_63)","line":483,"loc":{"start":{"line":483,"column":7},"end":{"line":483,"column":22}}},"64":{"name":"(anonymous_64)","line":489,"loc":{"start":{"line":489,"column":12},"end":{"line":489,"column":27}}},"65":{"name":"(anonymous_65)","line":495,"loc":{"start":{"line":495,"column":10},"end":{"line":495,"column":25}}},"66":{"name":"(anonymous_66)","line":496,"loc":{"start":{"line":496,"column":26},"end":{"line":496,"column":50}}},"67":{"name":"(anonymous_67)","line":511,"loc":{"start":{"line":511,"column":40},"end":{"line":511,"column":57}}},"68":{"name":"(anonymous_68)","line":512,"loc":{"start":{"line":512,"column":35},"end":{"line":512,"column":46}}},"69":{"name":"(anonymous_69)","line":516,"loc":{"start":{"line":516,"column":40},"end":{"line":516,"column":57}}},"70":{"name":"(anonymous_70)","line":517,"loc":{"start":{"line":517,"column":33},"end":{"line":517,"column":44}}},"71":{"name":"varRegex","line":527,"loc":{"start":{"line":527,"column":0},"end":{"line":527,"column":21}}},"72":{"name":"capitalize","line":530,"loc":{"start":{"line":530,"column":0},"end":{"line":530,"column":26}}},"73":{"name":"prepValidations","line":537,"loc":{"start":{"line":537,"column":0},"end":{"line":537,"column":38}}},"74":{"name":"assembleValidation","line":551,"loc":{"start":{"line":551,"column":0},"end":{"line":551,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":576,"column":1}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"3":{"start":{"line":11,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":45}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":27}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":47}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":47}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":47}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":81}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":72}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":59}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}},"14":{"start":{"line":28,"column":0},"end":{"line":31,"column":1}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":69}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":14}},"17":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"18":{"start":{"line":38,"column":2},"end":{"line":38,"column":49}},"19":{"start":{"line":43,"column":0},"end":{"line":50,"column":1}},"20":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":62}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":22}},"23":{"start":{"line":52,"column":0},"end":{"line":61,"column":1}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":31}},"25":{"start":{"line":54,"column":2},"end":{"line":54,"column":102}},"26":{"start":{"line":55,"column":2},"end":{"line":55,"column":120}},"27":{"start":{"line":56,"column":2},"end":{"line":56,"column":47}},"28":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"29":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":17}},"31":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"32":{"start":{"line":66,"column":2},"end":{"line":66,"column":15}},"33":{"start":{"line":71,"column":0},"end":{"line":76,"column":1}},"34":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}},"35":{"start":{"line":85,"column":0},"end":{"line":97,"column":1}},"36":{"start":{"line":86,"column":2},"end":{"line":86,"column":35}},"37":{"start":{"line":87,"column":2},"end":{"line":87,"column":21}},"38":{"start":{"line":88,"column":2},"end":{"line":88,"column":27}},"39":{"start":{"line":89,"column":2},"end":{"line":96,"column":3}},"40":{"start":{"line":90,"column":4},"end":{"line":90,"column":45}},"41":{"start":{"line":92,"column":4},"end":{"line":95,"column":6}},"42":{"start":{"line":93,"column":6},"end":{"line":93,"column":58}},"43":{"start":{"line":93,"column":39},"end":{"line":93,"column":58}},"44":{"start":{"line":94,"column":6},"end":{"line":94,"column":15}},"45":{"start":{"line":98,"column":0},"end":{"line":100,"column":1}},"46":{"start":{"line":99,"column":2},"end":{"line":99,"column":47}},"47":{"start":{"line":103,"column":0},"end":{"line":110,"column":1}},"48":{"start":{"line":104,"column":2},"end":{"line":104,"column":52}},"49":{"start":{"line":105,"column":2},"end":{"line":105,"column":34}},"50":{"start":{"line":105,"column":23},"end":{"line":105,"column":34}},"51":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"52":{"start":{"line":107,"column":4},"end":{"line":107,"column":34}},"53":{"start":{"line":109,"column":2},"end":{"line":109,"column":13}},"54":{"start":{"line":114,"column":0},"end":{"line":121,"column":1}},"55":{"start":{"line":115,"column":2},"end":{"line":115,"column":27}},"56":{"start":{"line":116,"column":2},"end":{"line":116,"column":32}},"57":{"start":{"line":117,"column":2},"end":{"line":117,"column":44}},"58":{"start":{"line":118,"column":2},"end":{"line":118,"column":45}},"59":{"start":{"line":119,"column":2},"end":{"line":119,"column":46}},"60":{"start":{"line":120,"column":2},"end":{"line":120,"column":68}},"61":{"start":{"line":124,"column":0},"end":{"line":159,"column":2}},"62":{"start":{"line":125,"column":2},"end":{"line":125,"column":21}},"63":{"start":{"line":126,"column":2},"end":{"line":126,"column":27}},"64":{"start":{"line":127,"column":2},"end":{"line":127,"column":28}},"65":{"start":{"line":129,"column":2},"end":{"line":129,"column":57}},"66":{"start":{"line":130,"column":2},"end":{"line":130,"column":25}},"67":{"start":{"line":132,"column":2},"end":{"line":139,"column":4}},"68":{"start":{"line":133,"column":4},"end":{"line":138,"column":27}},"69":{"start":{"line":135,"column":8},"end":{"line":135,"column":36}},"70":{"start":{"line":135,"column":29},"end":{"line":135,"column":36}},"71":{"start":{"line":136,"column":8},"end":{"line":136,"column":59}},"72":{"start":{"line":141,"column":2},"end":{"line":158,"column":7}},"73":{"start":{"line":143,"column":6},"end":{"line":143,"column":22}},"74":{"start":{"line":144,"column":6},"end":{"line":148,"column":8}},"75":{"start":{"line":145,"column":8},"end":{"line":147,"column":10}},"76":{"start":{"line":146,"column":10},"end":{"line":146,"column":115}},"77":{"start":{"line":149,"column":6},"end":{"line":149,"column":33}},"78":{"start":{"line":152,"column":6},"end":{"line":156,"column":7}},"79":{"start":{"line":153,"column":8},"end":{"line":153,"column":78}},"80":{"start":{"line":154,"column":12},"end":{"line":154,"column":32}},"81":{"start":{"line":155,"column":8},"end":{"line":155,"column":18}},"82":{"start":{"line":157,"column":6},"end":{"line":157,"column":52}},"83":{"start":{"line":163,"column":0},"end":{"line":168,"column":1}},"84":{"start":{"line":164,"column":2},"end":{"line":167,"column":4}},"85":{"start":{"line":165,"column":4},"end":{"line":165,"column":46}},"86":{"start":{"line":166,"column":4},"end":{"line":166,"column":52}},"87":{"start":{"line":173,"column":0},"end":{"line":177,"column":1}},"88":{"start":{"line":174,"column":2},"end":{"line":176,"column":16}},"89":{"start":{"line":175,"column":4},"end":{"line":175,"column":54}},"90":{"start":{"line":181,"column":0},"end":{"line":189,"column":1}},"91":{"start":{"line":182,"column":2},"end":{"line":182,"column":36}},"92":{"start":{"line":183,"column":2},"end":{"line":183,"column":35}},"93":{"start":{"line":183,"column":17},"end":{"line":183,"column":35}},"94":{"start":{"line":184,"column":2},"end":{"line":184,"column":60}},"95":{"start":{"line":184,"column":43},"end":{"line":184,"column":60}},"96":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"97":{"start":{"line":186,"column":4},"end":{"line":186,"column":32}},"98":{"start":{"line":188,"column":2},"end":{"line":188,"column":15}},"99":{"start":{"line":191,"column":0},"end":{"line":206,"column":1}},"100":{"start":{"line":192,"column":2},"end":{"line":192,"column":43}},"101":{"start":{"line":193,"column":2},"end":{"line":193,"column":39}},"102":{"start":{"line":194,"column":2},"end":{"line":194,"column":73}},"103":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"104":{"start":{"line":199,"column":4},"end":{"line":199,"column":46}},"105":{"start":{"line":199,"column":39},"end":{"line":199,"column":46}},"106":{"start":{"line":201,"column":2},"end":{"line":201,"column":62}},"107":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"108":{"start":{"line":203,"column":4},"end":{"line":203,"column":81}},"109":{"start":{"line":205,"column":2},"end":{"line":205,"column":16}},"110":{"start":{"line":211,"column":0},"end":{"line":215,"column":1}},"111":{"start":{"line":212,"column":2},"end":{"line":214,"column":5}},"112":{"start":{"line":213,"column":4},"end":{"line":213,"column":63}},"113":{"start":{"line":217,"column":0},"end":{"line":227,"column":1}},"114":{"start":{"line":218,"column":2},"end":{"line":226,"column":3}},"115":{"start":{"line":219,"column":4},"end":{"line":219,"column":33}},"116":{"start":{"line":220,"column":4},"end":{"line":223,"column":5}},"117":{"start":{"line":221,"column":6},"end":{"line":221,"column":60}},"118":{"start":{"line":222,"column":6},"end":{"line":222,"column":26}},"119":{"start":{"line":224,"column":4},"end":{"line":224,"column":30}},"120":{"start":{"line":225,"column":4},"end":{"line":225,"column":32}},"121":{"start":{"line":229,"column":0},"end":{"line":250,"column":1}},"122":{"start":{"line":230,"column":2},"end":{"line":230,"column":13}},"123":{"start":{"line":231,"column":2},"end":{"line":248,"column":3}},"124":{"start":{"line":232,"column":4},"end":{"line":232,"column":40}},"125":{"start":{"line":234,"column":7},"end":{"line":248,"column":3}},"126":{"start":{"line":235,"column":4},"end":{"line":235,"column":54}},"127":{"start":{"line":237,"column":7},"end":{"line":248,"column":3}},"128":{"start":{"line":238,"column":4},"end":{"line":238,"column":38}},"129":{"start":{"line":240,"column":7},"end":{"line":248,"column":3}},"130":{"start":{"line":241,"column":4},"end":{"line":241,"column":49}},"131":{"start":{"line":243,"column":7},"end":{"line":248,"column":3}},"132":{"start":{"line":244,"column":4},"end":{"line":244,"column":57}},"133":{"start":{"line":247,"column":4},"end":{"line":247,"column":67}},"134":{"start":{"line":249,"column":2},"end":{"line":249,"column":16}},"135":{"start":{"line":252,"column":0},"end":{"line":254,"column":1}},"136":{"start":{"line":253,"column":2},"end":{"line":253,"column":31}},"137":{"start":{"line":255,"column":0},"end":{"line":255,"column":28}},"138":{"start":{"line":258,"column":0},"end":{"line":288,"column":1}},"139":{"start":{"line":259,"column":2},"end":{"line":259,"column":20}},"140":{"start":{"line":260,"column":2},"end":{"line":260,"column":27}},"141":{"start":{"line":261,"column":2},"end":{"line":261,"column":29}},"142":{"start":{"line":262,"column":2},"end":{"line":262,"column":57}},"143":{"start":{"line":263,"column":2},"end":{"line":263,"column":25}},"144":{"start":{"line":265,"column":2},"end":{"line":269,"column":4}},"145":{"start":{"line":266,"column":4},"end":{"line":266,"column":54}},"146":{"start":{"line":267,"column":4},"end":{"line":267,"column":32}},"147":{"start":{"line":267,"column":25},"end":{"line":267,"column":32}},"148":{"start":{"line":268,"column":4},"end":{"line":268,"column":55}},"149":{"start":{"line":271,"column":2},"end":{"line":279,"column":4}},"150":{"start":{"line":272,"column":4},"end":{"line":278,"column":6}},"151":{"start":{"line":273,"column":6},"end":{"line":277,"column":7}},"152":{"start":{"line":274,"column":8},"end":{"line":274,"column":53}},"153":{"start":{"line":276,"column":8},"end":{"line":276,"column":46}},"154":{"start":{"line":281,"column":2},"end":{"line":285,"column":3}},"155":{"start":{"line":282,"column":4},"end":{"line":282,"column":74}},"156":{"start":{"line":283,"column":8},"end":{"line":283,"column":28}},"157":{"start":{"line":284,"column":4},"end":{"line":284,"column":14}},"158":{"start":{"line":287,"column":2},"end":{"line":287,"column":48}},"159":{"start":{"line":291,"column":0},"end":{"line":294,"column":1}},"160":{"start":{"line":292,"column":2},"end":{"line":292,"column":23}},"161":{"start":{"line":293,"column":2},"end":{"line":293,"column":27}},"162":{"start":{"line":296,"column":0},"end":{"line":389,"column":2}},"163":{"start":{"line":300,"column":4},"end":{"line":300,"column":52}},"164":{"start":{"line":305,"column":4},"end":{"line":306,"column":31}},"165":{"start":{"line":312,"column":4},"end":{"line":313,"column":38}},"166":{"start":{"line":319,"column":4},"end":{"line":319,"column":57}},"167":{"start":{"line":319,"column":25},"end":{"line":319,"column":57}},"168":{"start":{"line":320,"column":4},"end":{"line":320,"column":60}},"169":{"start":{"line":320,"column":25},"end":{"line":320,"column":60}},"170":{"start":{"line":321,"column":4},"end":{"line":321,"column":49}},"171":{"start":{"line":321,"column":25},"end":{"line":321,"column":49}},"172":{"start":{"line":322,"column":4},"end":{"line":322,"column":17}},"173":{"start":{"line":328,"column":4},"end":{"line":328,"column":42}},"174":{"start":{"line":333,"column":4},"end":{"line":333,"column":67}},"175":{"start":{"line":338,"column":4},"end":{"line":338,"column":26}},"176":{"start":{"line":343,"column":4},"end":{"line":343,"column":54}},"177":{"start":{"line":348,"column":4},"end":{"line":348,"column":47}},"178":{"start":{"line":353,"column":4},"end":{"line":353,"column":52}},"179":{"start":{"line":358,"column":4},"end":{"line":358,"column":52}},"180":{"start":{"line":363,"column":4},"end":{"line":363,"column":89}},"181":{"start":{"line":368,"column":4},"end":{"line":368,"column":90}},"182":{"start":{"line":373,"column":4},"end":{"line":373,"column":89}},"183":{"start":{"line":378,"column":4},"end":{"line":378,"column":90}},"184":{"start":{"line":383,"column":4},"end":{"line":383,"column":37}},"185":{"start":{"line":393,"column":0},"end":{"line":396,"column":1}},"186":{"start":{"line":394,"column":2},"end":{"line":395,"column":70}},"187":{"start":{"line":395,"column":4},"end":{"line":395,"column":70}},"188":{"start":{"line":398,"column":0},"end":{"line":401,"column":1}},"189":{"start":{"line":399,"column":2},"end":{"line":400,"column":69}},"190":{"start":{"line":400,"column":4},"end":{"line":400,"column":69}},"191":{"start":{"line":403,"column":0},"end":{"line":405,"column":1}},"192":{"start":{"line":404,"column":2},"end":{"line":404,"column":50}},"193":{"start":{"line":408,"column":0},"end":{"line":423,"column":2}},"194":{"start":{"line":431,"column":0},"end":{"line":433,"column":1}},"195":{"start":{"line":432,"column":2},"end":{"line":432,"column":24}},"196":{"start":{"line":434,"column":0},"end":{"line":434,"column":38}},"197":{"start":{"line":435,"column":0},"end":{"line":437,"column":1}},"198":{"start":{"line":436,"column":2},"end":{"line":436,"column":21}},"199":{"start":{"line":443,"column":0},"end":{"line":446,"column":1}},"200":{"start":{"line":444,"column":2},"end":{"line":444,"column":24}},"201":{"start":{"line":445,"column":2},"end":{"line":445,"column":19}},"202":{"start":{"line":448,"column":0},"end":{"line":448,"column":33}},"203":{"start":{"line":450,"column":0},"end":{"line":469,"column":3}},"204":{"start":{"line":455,"column":4},"end":{"line":455,"column":55}},"205":{"start":{"line":456,"column":4},"end":{"line":457,"column":42}},"206":{"start":{"line":463,"column":4},"end":{"line":466,"column":7}},"207":{"start":{"line":464,"column":6},"end":{"line":464,"column":42}},"208":{"start":{"line":464,"column":22},"end":{"line":464,"column":42}},"209":{"start":{"line":465,"column":6},"end":{"line":465,"column":25}},"210":{"start":{"line":474,"column":0},"end":{"line":477,"column":1}},"211":{"start":{"line":475,"column":2},"end":{"line":475,"column":25}},"212":{"start":{"line":476,"column":2},"end":{"line":476,"column":19}},"213":{"start":{"line":479,"column":0},"end":{"line":479,"column":37}},"214":{"start":{"line":481,"column":0},"end":{"line":502,"column":3}},"215":{"start":{"line":484,"column":4},"end":{"line":484,"column":29}},"216":{"start":{"line":490,"column":4},"end":{"line":490,"column":77}},"217":{"start":{"line":496,"column":4},"end":{"line":499,"column":11}},"218":{"start":{"line":497,"column":6},"end":{"line":497,"column":30}},"219":{"start":{"line":498,"column":6},"end":{"line":498,"column":57}},"220":{"start":{"line":506,"column":0},"end":{"line":506,"column":75}},"221":{"start":{"line":507,"column":0},"end":{"line":507,"column":55}},"222":{"start":{"line":508,"column":0},"end":{"line":509,"column":73}},"223":{"start":{"line":511,"column":0},"end":{"line":515,"column":3}},"224":{"start":{"line":512,"column":2},"end":{"line":514,"column":4}},"225":{"start":{"line":513,"column":4},"end":{"line":513,"column":74}},"226":{"start":{"line":516,"column":0},"end":{"line":520,"column":3}},"227":{"start":{"line":517,"column":2},"end":{"line":519,"column":4}},"228":{"start":{"line":518,"column":4},"end":{"line":518,"column":74}},"229":{"start":{"line":526,"column":0},"end":{"line":526,"column":34}},"230":{"start":{"line":527,"column":0},"end":{"line":527,"column":69}},"231":{"start":{"line":527,"column":23},"end":{"line":527,"column":67}},"232":{"start":{"line":530,"column":0},"end":{"line":532,"column":1}},"233":{"start":{"line":531,"column":2},"end":{"line":531,"column":54}},"234":{"start":{"line":537,"column":0},"end":{"line":547,"column":1}},"235":{"start":{"line":538,"column":2},"end":{"line":538,"column":41}},"236":{"start":{"line":539,"column":2},"end":{"line":545,"column":3}},"237":{"start":{"line":540,"column":4},"end":{"line":540,"column":38}},"238":{"start":{"line":541,"column":4},"end":{"line":541,"column":77}},"239":{"start":{"line":541,"column":32},"end":{"line":541,"column":77}},"240":{"start":{"line":542,"column":4},"end":{"line":544,"column":5}},"241":{"start":{"line":543,"column":6},"end":{"line":543,"column":56}},"242":{"start":{"line":546,"column":2},"end":{"line":546,"column":21}},"243":{"start":{"line":551,"column":0},"end":{"line":565,"column":1}},"244":{"start":{"line":552,"column":2},"end":{"line":554,"column":3}},"245":{"start":{"line":553,"column":4},"end":{"line":553,"column":48}},"246":{"start":{"line":555,"column":2},"end":{"line":563,"column":3}},"247":{"start":{"line":556,"column":4},"end":{"line":556,"column":47}},"248":{"start":{"line":557,"column":4},"end":{"line":557,"column":35}},"249":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"250":{"start":{"line":559,"column":6},"end":{"line":559,"column":44}},"251":{"start":{"line":561,"column":9},"end":{"line":563,"column":3}},"252":{"start":{"line":562,"column":4},"end":{"line":562,"column":46}},"253":{"start":{"line":564,"column":2},"end":{"line":564,"column":20}},"254":{"start":{"line":567,"column":0},"end":{"line":567,"column":36}},"255":{"start":{"line":568,"column":0},"end":{"line":568,"column":38}},"256":{"start":{"line":569,"column":0},"end":{"line":569,"column":41}},"257":{"start":{"line":570,"column":0},"end":{"line":570,"column":32}},"258":{"start":{"line":571,"column":0},"end":{"line":571,"column":36}},"259":{"start":{"line":572,"column":0},"end":{"line":572,"column":35}},"260":{"start":{"line":574,"column":0},"end":{"line":574,"column":15}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":32},"end":{"line":16,"column":39}},{"start":{"line":16,"column":43},"end":{"line":16,"column":45}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":38}},{"start":{"line":17,"column":44},"end":{"line":17,"column":46}}]},"4":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":24},"end":{"line":18,"column":40}},{"start":{"line":18,"column":44},"end":{"line":18,"column":46}}]},"5":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":24},"end":{"line":19,"column":74}},{"start":{"line":19,"column":78},"end":{"line":19,"column":80}}]},"6":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":37},"end":{"line":19,"column":53}},{"start":{"line":19,"column":57},"end":{"line":19,"column":73}}]},"7":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":24},"end":{"line":20,"column":46}},{"start":{"line":20,"column":50},"end":{"line":20,"column":72}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":51}},{"start":{"line":21,"column":55},"end":{"line":21,"column":57}}]},"9":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":17},"end":{"line":54,"column":27}},{"start":{"line":54,"column":33},"end":{"line":54,"column":49}},{"start":{"line":54,"column":53},"end":{"line":54,"column":73}},{"start":{"line":54,"column":77},"end":{"line":54,"column":101}}]},"10":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":17},"end":{"line":55,"column":29}},{"start":{"line":55,"column":33},"end":{"line":55,"column":57}},{"start":{"line":55,"column":61},"end":{"line":55,"column":89}},{"start":{"line":55,"column":93},"end":{"line":55,"column":119}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"12":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"13":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"14":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"15":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":32},"end":{"line":118,"column":38}},{"start":{"line":118,"column":42},"end":{"line":118,"column":44}}]},"16":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":32},"end":{"line":119,"column":39}},{"start":{"line":119,"column":43},"end":{"line":119,"column":45}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":6}},{"start":{"line":152,"column":6},"end":{"line":152,"column":6}}]},"19":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":23},"end":{"line":165,"column":39}},{"start":{"line":165,"column":43},"end":{"line":165,"column":45}}]},"20":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"21":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"22":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"23":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":25}},{"start":{"line":198,"column":29},"end":{"line":198,"column":46}},{"start":{"line":198,"column":50},"end":{"line":198,"column":69}}]},"24":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"25":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":20}},{"start":{"line":199,"column":24},"end":{"line":199,"column":37}}]},"26":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"27":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":25}},{"start":{"line":202,"column":29},"end":{"line":202,"column":45}}]},"28":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"29":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"30":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":7},"end":{"line":234,"column":7}},{"start":{"line":234,"column":7},"end":{"line":234,"column":7}}]},"31":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":7},"end":{"line":237,"column":7}},{"start":{"line":237,"column":7},"end":{"line":237,"column":7}}]},"32":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":7},"end":{"line":240,"column":7}},{"start":{"line":240,"column":7},"end":{"line":240,"column":7}}]},"33":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":7},"end":{"line":243,"column":7}},{"start":{"line":243,"column":7},"end":{"line":243,"column":7}}]},"34":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"35":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"36":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":12},"end":{"line":305,"column":38}},{"start":{"line":306,"column":6},"end":{"line":306,"column":29}}]},"37":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":45}},{"start":{"line":313,"column":6},"end":{"line":313,"column":36}}]},"38":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":4},"end":{"line":319,"column":4}},{"start":{"line":319,"column":4},"end":{"line":319,"column":4}}]},"39":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"40":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"41":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":11},"end":{"line":333,"column":27}},{"start":{"line":333,"column":31},"end":{"line":333,"column":66}}]},"42":{"line":343,"type":"cond-expr","locations":[{"start":{"line":343,"column":40},"end":{"line":343,"column":44}},{"start":{"line":343,"column":47},"end":{"line":343,"column":52}}]},"43":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":12},"end":{"line":343,"column":23}},{"start":{"line":343,"column":27},"end":{"line":343,"column":37}}]},"44":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":11},"end":{"line":353,"column":27}},{"start":{"line":353,"column":31},"end":{"line":353,"column":51}}]},"45":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":11},"end":{"line":358,"column":27}},{"start":{"line":358,"column":31},"end":{"line":358,"column":51}}]},"46":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":11},"end":{"line":363,"column":27}},{"start":{"line":363,"column":31},"end":{"line":363,"column":49}},{"start":{"line":363,"column":53},"end":{"line":363,"column":88}}]},"47":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":11},"end":{"line":368,"column":27}},{"start":{"line":368,"column":31},"end":{"line":368,"column":49}},{"start":{"line":368,"column":53},"end":{"line":368,"column":89}}]},"48":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":11},"end":{"line":373,"column":27}},{"start":{"line":373,"column":31},"end":{"line":373,"column":49}},{"start":{"line":373,"column":53},"end":{"line":373,"column":88}}]},"49":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":11},"end":{"line":378,"column":27}},{"start":{"line":378,"column":31},"end":{"line":378,"column":49}},{"start":{"line":378,"column":53},"end":{"line":378,"column":89}}]},"50":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"51":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"52":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":9},"end":{"line":404,"column":32}},{"start":{"line":404,"column":36},"end":{"line":404,"column":49}}]},"53":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":24},"end":{"line":455,"column":40}},{"start":{"line":455,"column":43},"end":{"line":455,"column":54}}]},"54":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":6},"end":{"line":464,"column":6}},{"start":{"line":464,"column":6},"end":{"line":464,"column":6}}]},"55":{"line":498,"type":"cond-expr","locations":[{"start":{"line":498,"column":43},"end":{"line":498,"column":50}},{"start":{"line":498,"column":53},"end":{"line":498,"column":57}}]},"56":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":17},"end":{"line":498,"column":21}},{"start":{"line":498,"column":25},"end":{"line":498,"column":40}}]},"57":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":4},"end":{"line":541,"column":4}},{"start":{"line":541,"column":4},"end":{"line":541,"column":4}}]},"58":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":2},"end":{"line":552,"column":2}},{"start":{"line":552,"column":2},"end":{"line":552,"column":2}}]},"59":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":2},"end":{"line":555,"column":2}},{"start":{"line":555,"column":2},"end":{"line":555,"column":2}}]},"60":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":4},"end":{"line":558,"column":4}},{"start":{"line":558,"column":4},"end":{"line":558,"column":4}}]},"61":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":9},"end":{"line":561,"column":9}},{"start":{"line":561,"column":9},"end":{"line":561,"column":9}}]}},"code":["//     Checkit.js 0.6.0","//     http://tgriesser.com/checkit","//     (c) 2013-2015 Tim Griesser","//     Checkit may be freely distributed under the MIT license.","module.exports = function(_, Promise) {","","var inherits = require('inherits')","","// The top level `Checkit` constructor, accepting the","// `validations` to be run and any additional `options`.","function Checkit(validations, options) {","  if (!(this instanceof Checkit)) {","    return new Checkit(validations, options);","  }","  this.conditional    = [];","  options             = _.clone(options || {});","  this.labels         = options.labels   || {};","  this.messages       = options.messages || {};","  this.language       = Checkit.i18n[options.language || Checkit.language] || {};","  this.labelTransform = options.labelTransform || Checkit.labelTransform","  this.validations    = prepValidations(validations || {});","}","","Checkit.VERSION = '0.6.0';","","// Possibly run a validations on this object, depending on the","// result of the `conditional` handler.","Checkit.prototype.maybe = function(validations, conditional) {","  this.conditional.push([prepValidations(validations), conditional]);","  return this;","}","","// Asynchronously runs a validation block, returning a promise","// which resolves with the validated object items, or is rejected","// with a `Checkit.Error`","Checkit.prototype.run =","Checkit.prototype.validate = function(target, context) {","  return new Runner(this, target, context).run();","}","","// Synchronously runs a validation block, returning an object of all fields","// validated, or throwing a `Checkit.Error` object.","Checkit.prototype.runSync =","Checkit.prototype.validateSync = function(target, context) {","  try  {","    return [null, new SyncRunner(this, target, context).run()]","  } catch (err) {","    return [err, null]","  }","}","","Checkit.prototype.getMessage = function(item, key) {","  var language = this.language;","  var label    = item.label   || this.labels[key] || language.labels[key] || this.labelTransform(key);","  var message  = item.message || this.messages[item.rule] || language.messages[item.rule] || language.messages.fallback;","  message = message.replace(labelRegex, label);","  for (var i = 0, l = item.params.length; i < l; i++) {","    message = message.replace(varRegex(i+1), item.params[i]);","  }","  return message;","}","","// Used to transform the label before using it, can be","// set globally or in the `options` for the Checkit object.","Checkit.labelTransform = function(label) {","  return label;","}","","// Object containing languages for the validations... Feel free to","// add anything to this object.","Checkit.i18n = {","  en: require('./lang/en'),","  es: require('./lang/es'),","  ru: require('./lang/ru'),","  fr: require('./lang/fr')","}","","// The default language for all validations, defaults to \"en\" which","// is included with the library by default. To add additional languages,","// add them to the `Checkit.i18n` object.","Checkit.language = 'en';","","// Runs validation on an individual rule & value, for convenience.","// e.g. `Checkit.check('email', 'foo@domain', 'email').then(...`","Checkit.check = function(key, value, rules, sync) {","  var input = {}, validations = {};","  input[key] = value;","  validations[key] = rules;","  if (sync) {","    return checkSync(validations, input, key)","  } else {","    return new Checkit(validations).run(input).then(null, function(err) {","      if (err instanceof CheckitError) throw err.get(key);","      throw err","    })","  }","}","Checkit.checkSync = function(key, value, rules) {","  return Checkit.check(key, value, rules, true)","}","","// Synchronously check an individual field against a rule.","function checkSync(validations, input, key) {","  var arr = new Checkit(validations).runSync(input);","  if (arr[0] === null) return arr;","  if (arr[0] instanceof CheckitError) {","    return [arr[0].get(key), null]","  }","  return arr;","}","","// The validator is the object which is dispatched with the `run`","// call from the `checkit.run` method.","function Runner(checkit, target, context) {","  this.errors         = {};","  this.checkit        = checkit;","  this.conditional    = checkit.conditional;","  this.target         = _.clone(target || {})","  this.context        = _.clone(context || {})","  this.validator      = new Validator(this.target, checkit.language)","}","","// Runs the validations on a specified \"target\".","Runner.prototype.run = function(target, context) {","  var runner  = this;","  var target  = this.target","  var context = this.context","","  var validationHash = _.clone(this.checkit.validations);","  var errors         = {}","","  var pendingConditionals = _.map(this.conditional, function(conditional) {","    return Promise.resolve(checkConditional(runner, conditional))","      .then(function(result) {","        if (result !== true) return;","        addVerifiedConditional(validationHash, conditional)","      })","      .catch(function() {})","  })","","  return Promise.all(pendingConditionals)","    .then(function() {","      var pending = []","      _.each(validationHash, function(validations, key) {","        _.each(validations, function(validation) {","          pending.push(processItemAsync(runner, validation, key, context).catch(addError(errors, key, validation)))","        })","      })","      return Promise.all(pending)","    })","    .then(function() {","      if (!_.isEmpty(errors)) {","        var err = new CheckitError(_.keys(errors).length + ' invalid values');","            err.errors = errors;","        throw err;","      }","      return _.pick(target, _.keys(validationHash));","    });","};","","// Only if we explicitly return `true` do we go ahead","// and add the validations to the stack for a particular rule.","function addVerifiedConditional(validations, conditional) {","  _.each(conditional[0], function(val, key) {","    validations[key] = validations[key] || [];","    validations[key] = validations[key].concat(val);","  })","}","","// Runs through each of the `conditional` validations, and","// merges them with the other validations if the condition passes;","// either by returning `true` or a fulfilled promise.","function checkConditional(runner, conditional) {","  try {","    return conditional[1].call(runner, runner.target);","  } catch (e) {}","}","","// Get value corresponding to key containing \".\" from nested object.","// If key containing \".\" is proper in object (e.g. {\"foo.bar\": 100}) return 100.","function getVal(target, key){","  var value = _.clone(target), keys;","  if(value[key]) return value[key];","  if((keys = key.split('.')).length === 0) return undefined;","  while(keys.length > 0){","    value = value[keys.shift()];","  }","  return value;","}","","function processItem(runner, currentValidation, key, context) {","  var value   = getVal(runner.target, key);","  var rule    = currentValidation.rule;","  var params  = [value].concat(currentValidation.params).concat(context);","","  // If the rule isn't an existence / required check, return","  // true if the value doesn't exist.","  if (rule !== 'accepted' && rule !== 'exists' && rule !== 'required') {","    if (value === '' || value == null) return;","  }","  var result = runRule(runner.validator, runner, rule, params)","  if (_.isBoolean(result) && result === false) {","    throw new ValidationError(runner.checkit.getMessage(currentValidation, key));","  }","  return result;","}","","// Processes an individual item in the validation collection for the current","// validation object. Returns the value from the completed validation, which will","// be a boolean, or potentially a promise if the current object is an async validation.","function processItemAsync(runner, currentValidation, key, context) {","  return Promise.resolve(true).then(function() {","    return processItem(runner, currentValidation, key, context)","  });","}","","function addError(errors, key, validation) {","  return function(err) {","    var fieldError = errors[key];","    if (!fieldError) {","      fieldError = errors[key] = new FieldError(err.message)","      fieldError.key = key","    }","    err.rule = validation.rule","    fieldError.errors.push(err);","  }","}","","function runRule(validator, runner, rule, params) {","  var result;","  if (_.isFunction(rule)) {","    result = rule.apply(runner, params);","  }","  else if (typeof validator[rule] === 'function') {","    result = validator[rule].apply(validator, params);","  }","  else if (typeof _[rule] === 'function') {","    result = _[rule].apply(_, params);","  }","  else if (Checkit.Regex[rule]) {","    result = Checkit.Regex[rule].test(params[0]);","  }","  else if (typeof _['is' + capitalize(rule)] === 'function') {","    result = _['is' + capitalize(rule)].apply(_, params);","  }","  else {","    throw new ValidationError('No validation defined for ' + rule);","  }","  return result;","}","","function SyncRunner() {","  Runner.apply(this, arguments)","}","inherits(SyncRunner, Runner)","","// Runs the validations on a specified \"target\".","SyncRunner.prototype.run = function() {","  var runner = this;","  var target = this.target;","  var context = this.context;","  var validationHash = _.clone(this.checkit.validations);","  var errors         = {}","","  _.each(this.conditional, function(conditional) {","    var result = checkConditional(runner, conditional)","    if (result !== true) return;","    addVerifiedConditional(validationHash, conditional)","  })","","  _.each(validationHash, function(validations, key) {","    _.each(validations, function(validation) {","      try {","        processItem(runner, validation, key, context)","      } catch(err) {","        addError(errors, key, validation)(err)","      }","    })","  })","","  if (!_.isEmpty(errors)) {","    var err = new CheckitError(_.keys(errors).length + ' invalid values');","        err.errors = errors;","    throw err;","  }","","  return _.pick(target, _.keys(validationHash));","}","","// Constructor for running the `Validations`.","function Validator(target, language) {","  this._target = target","  this._language = language","}","","_.extend(Validator.prototype, {","","  // Check if the value is an \"accepted\" value, useful for form submissions.","  accepted: function(val) {","    return _.includes(this._language.accepted, val);","  },","","  // The item must be a number between the given `min` and `max` values.","  between: function(val, min, max) {","    return (this.greaterThan(val, min) &&","      this.lessThan(val, max));","  },","","  // The item must be a number equal or larger than the given `min` and","  // equal or smaller than the given `max` value.","  range: function(val, min, max) {","    return (this.greaterThanEqualTo(val, min) &&","      this.lessThanEqualTo(val, max));","  },","","  // Check that an item contains another item, either a string,","  // array, or object.","  contains: function(val, item) {","    if (_.isString(val)) return val.indexOf(item) !== -1;","    if (_.isArray(val))  return _.indexOf(val, item) !== -1;","    if (_.isObject(val)) return _.has(val, item);","    return false;","  },","","  // The current value should be different than another field in the current","  // validation object.","  different: function(val, field) {","    return !this.matchesField(val, field);","  },","","  // Check if two items are the exact same length","  exactLength: function(val, length) {","    return checkInt(length) || val.length === parseInt(length, 10);","  },","","  // Key must not be `undefined`.","  exists: function(val) {","    return val !== void 0;","  },","","  // Field is required and not empty (zero does not count as empty).","  required: function(val) {","    return (val != null && val !== '' ? true : false);","  },","","  // Matches another named field in the current validation object.","  matchesField: function(val, field) {","    return _.isEqual(val, this._target[field]);","  },","","  // Check that an item is a minimum length","  minLength: function(val, length) {","    return checkInt(length) || val.length >= length;","  },","","  // Check that an item is less than a length","  maxLength: function(val, length) {","    return checkInt(length) || val.length <= length;","  },","","  // Check if one items is greater than another","  greaterThan: function(val, param) {","    return checkNumber(val) || checkNumber(param) || parseFloat(val) > parseFloat(param);","  },","","  // Check if one items is greater than or equal to another","  greaterThanEqualTo: function(val, param) {","    return checkNumber(val) || checkNumber(param) || parseFloat(val) >= parseFloat(param);","  },","","  // Check if one item is less than another","  lessThan: function(val, param) {","    return checkNumber(val) || checkNumber(param) || parseFloat(val) < parseFloat(param);","  },","","  // Check if one item is less than or equal to another","  lessThanEqualTo: function(val, param) {","    return checkNumber(val) || checkNumber(param) || parseFloat(val) <= parseFloat(param);","  },","","  // Check if the value is a string","  string: function(val) {","    return (typeof val === 'string');","  },","","  // Check if the value is numeric","  numeric: numeric","","})","","// Validation helpers & regex","","function checkInt(val) {","  if (!val.match(Regex.integer))","    throw new Error('The validator argument must be a valid integer');","}","","function checkNumber(val) {","  if (!numeric(val))","    throw new Error('The validator argument must be a valid number');","}","","function numeric(val) {","  return !isNaN(parseFloat(val)) && isFinite(val);","}","","// Standard regular expression validators.","var Regex = Checkit.Regex = {","  alpha: /^[a-z]+$/i,","  alphaDash: /^[a-z0-9_\\-]+$/i,","  alphaNumeric: /^[a-z0-9]+$/i,","  alphaUnderscore: /^[a-z0-9_]+$/i,","  base64: /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/,","  email: /^(.+)@(.+)\\.(.+)$/i,","  integer: /^\\-?[0-9]+$/,","  ipv4: /^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/i,","  ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,","  luhn: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,","  natural: /^[0-9]+$/i,","  naturalNonZero: /^[1-9][0-9]*$/i,","  url: /^((http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)|)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,","  uuid: /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i","};","","// Error Types","// ---------------","","","// An error for an individual \"validation\", where one or more \"validations\"","// make up a single ruleset. These are grouped together into a `FieldError`.","function ValidationError(message) {","  this.message = message","}","ValidationError.prototype = new Error;","ValidationError.prototype.toString = function() {","  return this.message","}","","// An `Error` object specific to an individual field,","// useful in the `Checkit.check` method when you're only","// validating an individual field. It contains an \"errors\"","// array which keeps track of any falidations","function FieldError(message) {","  this.message = message","  this.errors  = []","}","","FieldError.prototype = new Error;","","_.extend(FieldError.prototype, {","","  // Call `toString` on the current field, which should","  // turn the error into the format:","  toString: function(flat) {","    var errors = flat ? [this.errors[0]] : this.errors;","    return this.key + ': ' +","      _.map(errors, 'message').join(', ');","  },","","  // Returns the current error in json format, by calling `toJSON`","  // on the error, if there is one, otherwise returning the message.","  toJSON: function() {","    return this.map(function(err) {","      if (err.toJSON) return err.toJSON();","      return err.message;","    });","  }","","});","","// An object that inherits from the `Error` prototype,","// but contains methods for working with the individual errors","// created by the failed Checkit validation object.","function CheckitError(message) {","  this.message = message;","  this.errors  = {}","}","","CheckitError.prototype = new Error();","","_.extend(CheckitError.prototype, {","","  get: function(name) {","    return this.errors[name];","  },","","  // Convert the current error object toString, by stringifying the JSON representation","  // of the object.","  toString: function(flat) {","    return 'Checkit Errors - ' + this.invokeMap('toString', flat).join('; ');","  },","","  // Creates a JSON object of the validations, if `true` is passed - it will","  // flatten the error into a single value per item.","  toJSON: function(flat) {","    return this.transform(function(acc, val, key) {","      var json = val.toJSON();","      acc[key] = flat && _.isArray(json) ? json[0] : json","    }, {});","  }","","});","","// Similar to a Backbone.js `Model` or `Collection`, we'll mixin the underscore","// methods that make sense to act on `CheckitError.errors` or `FieldError.errors`.","var objMethods   = ['keys', 'values', 'toPairs', 'invert', 'pick', 'omit'];","var arrMethods   = ['head', 'initial', 'tail', 'last'];","var shareMethods = ['forEach', 'each', 'map', 'reduce', 'transform', 'reduceRight',","  'find', 'filter', 'reject', 'invokeMap', 'toArray', 'size', 'shuffle'];","","_.each(shareMethods.concat(objMethods), function(method) {","  CheckitError.prototype[method] = function() {","    return _[method].apply(_, [this.errors].concat(_.toArray(arguments)));","  };","});","_.each(shareMethods.concat(arrMethods), function(method) {","  FieldError.prototype[method] = function() {","    return _[method].apply(_, [this.errors].concat(_.toArray(arguments)));","  };","});","","// Assorted Helper Items:","// --------------------------","","// Regular expression for matching the `field_name` and `var_n`","var labelRegex = /\\{\\{label\\}\\}/g;","function varRegex(i) { return new RegExp('{{var_' + i + '}}', 'g'); }","","// Simple capitalize helper.","function capitalize(word) {","  return word.charAt(0).toUpperCase() + word.slice(1);","}","","// Preps the validations being sent to the `run` block, to standardize","// the format and allow for maximum flexibility when passing to the","// validation blocks.","function prepValidations(validations) {","  validations = _.cloneDeep(validations);","  for (var key in validations) {","    var validation = validations[key];","    if (!_.isArray(validation)) validations[key] = validation = [validation];","    for (var i = 0, l = validation.length; i < l; i++) {","      validation[i] = assembleValidation(validation[i]);","    }","  }","  return validations;","}","","// Turns the current validation item into an object literal,","// containing the rule, any arguments split from the `:` delimeter","function assembleValidation(validation) {","  if (!_.isPlainObject(validation)) {","    validation = {rule: validation, params: []};","  }","  if (_.isString(validation.rule)) {","    var splitRule = validation.rule.split(':');","    validation.rule = splitRule[0];","    if (_.isEmpty(validation.params)) {","      validation.params = _.tail(splitRule);","    }","  } else if (!_.isFunction(validation.rule)) {","    throw new TypeError('Invalid validation');","  }","  return validation;","}","","Checkit.FieldError      = FieldError","Checkit.Error           = CheckitError","Checkit.ValidationError = ValidationError","Checkit.Runner          = Runner","Checkit.SyncRunner      = SyncRunner","Checkit.Validator       = Validator","","return Checkit;","","}",""],"l":{"5":1,"7":1,"11":1,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"24":1,"28":1,"29":0,"30":0,"36":1,"38":0,"43":1,"45":0,"46":0,"48":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"65":1,"66":0,"71":1,"81":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"94":0,"98":1,"99":0,"103":1,"104":0,"105":0,"106":0,"107":0,"109":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"124":1,"125":0,"126":0,"127":0,"129":0,"130":0,"132":0,"133":0,"135":0,"136":0,"141":0,"143":0,"144":0,"145":0,"146":0,"149":0,"152":0,"153":0,"154":0,"155":0,"157":0,"163":1,"164":0,"165":0,"166":0,"173":1,"174":0,"175":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"191":1,"192":0,"193":0,"194":0,"198":0,"199":0,"201":0,"202":0,"203":0,"205":0,"211":1,"212":0,"213":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"225":0,"229":1,"230":0,"231":0,"232":0,"234":0,"235":0,"237":0,"238":0,"240":0,"241":0,"243":0,"244":0,"247":0,"249":0,"252":1,"253":0,"255":1,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"265":0,"266":0,"267":0,"268":0,"271":0,"272":0,"273":0,"274":0,"276":0,"281":0,"282":0,"283":0,"284":0,"287":0,"291":1,"292":0,"293":0,"296":1,"300":0,"305":0,"312":0,"319":0,"320":0,"321":0,"322":0,"328":0,"333":0,"338":0,"343":0,"348":0,"353":0,"358":0,"363":0,"368":0,"373":0,"378":0,"383":0,"393":1,"394":0,"395":0,"398":1,"399":0,"400":0,"403":1,"404":0,"408":1,"431":1,"432":0,"434":1,"435":1,"436":0,"443":1,"444":0,"445":0,"448":1,"450":1,"455":0,"456":0,"463":0,"464":0,"465":0,"474":1,"475":0,"476":0,"479":1,"481":1,"484":0,"490":0,"496":0,"497":0,"498":0,"506":1,"507":1,"508":1,"511":1,"512":19,"513":0,"516":1,"517":17,"518":0,"526":1,"527":1,"530":1,"531":0,"537":1,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"546":0,"551":1,"552":0,"553":0,"555":0,"556":0,"557":0,"558":0,"559":0,"561":0,"562":0,"564":0,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"574":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/en.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/en.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":60,"column":1}}},"branchMap":{},"code":["module.exports = {","","  accepted: ['on', 'yes', 1, '1', true, 'true'],","","  labels: {},","","  messages: {","","    // Custom Predicates","    accepted: 'The {{label}} must be yes, on, true, or 1',","    email: 'The {{label}} must be a valid email address',","    exactLength: 'The {{label}} must be exactly {{var_1}} characters long',","    exists: 'The {{label}} must be defined',","    required: 'The {{label}} is required',","    minLength: 'The {{label}} must be at least {{var_1}} characters long',","    maxLength: 'The {{label}} must not exceed {{var_1}} characters long',","    lessThan: 'The {{label}} must be a number less than {{var_1}}',","    lessThanEqualTo: 'The {{label}} must be a number less than or equal to {{var_1}}',","    greaterThan: 'The {{label}} must be a number greater than {{var_1}}',","    greaterThanEqualTo: 'The {{label}} must be a number greater than or equal to {{var_1}}',","    between: 'The {{label}} must be a number between {{var_1}} and {{var_2}}',","    range: 'The {{label}} must be a number equal or larger than {{var_1}} and equal or smaller than {{var_2}}',","    contains: 'The {{label}} must contain {{var_1}}',","    string: 'The {{label}} must be type \"string\"',","    numeric: 'The {{label}} must be a numeric value',","    matchesField: 'The {{label}} must exactly match the {{var_1}}',","    different: 'The {{label}} must be different than the {{var_1}}',","    isPlainObject: 'The {{label}} must be a plain object',","","    // Underscore Predicates","    date: 'The {{label}} must be a Date',","    equal: 'The {{label}} does not match {{var_1}}',","    'boolean': 'The {{label}} must be type \"boolean\"',","    empty: 'The {{label}} must be empty',","    array: 'The {{label}} must be an array',","    'null': 'The {{label}} must be null',","    'NaN': 'The {{label}} must be NaN',","    finite: 'The {{label}} must be a finite number',","    'function': 'The {{label}} must be a function',","    'arguments': 'The {{label}} must be a javascript \"arguments\" object',","    regExp: 'The {{label}} must be a javascript RegExp object',","","    // Regex specific messages.","    alpha: 'The {{label}} must only contain alphabetical characters',","    alphaDash: 'The {{label}} must only contain alpha-numeric characters, underscores, and dashes',","    alphaNumeric: 'The {{label}} must only contain alpha-numeric characters',","    alphaUnderscore: 'The {{label}} must only contain alpha-numeric characters, underscores, and dashes',","    natural: 'The {{label}} must be a positive number',","    naturalNonZero: 'The {{label}} must be a number greater than zero',","    integer: 'The {{label}} must be a valid integer',","    ipv4: 'The {{label}} must be a valid IPv4 string',","    ipv6: 'The {{label}} must be a valid IPv6 address',","    base64: 'The {{label}} must be a base64 string',","    luhn: 'The {{label}} must be a valid credit card number',","    uuid: 'The {{label}} must be a valid uuid',","","    // If there is no validation provided for an item, use this generic line.","    fallback: 'Validation for {{label}} did not pass'","  }","}"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/es.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/es.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":47,"column":1}}},"branchMap":{},"code":["module.exports = {","","  accepted: ['on', 'yes', 1, '1', true, 'true', 'si'],","","  labels: {},","","  messages: {","    email: '{{label}} debe de ser una dirección válida de correo electrónico',","    exactLength: '{{label}} debe de ser de exactamente {{var_1}} caracteres',","    exists: '{{label}} debe de existir',","    required: '{{label}} es obligatorio',","    minLength: '{{label}} debe de ser de al menos {{var_1}} caracteres',","    maxLength: '{{label}} no debe de ser de más de {{var_1}} caracteres',","    lessThan: '{{label}} debe de ser un número menor que {{var_1}}',","    lessThanEqualTo: '{{label}} debe de ser un número menor o igual a {{var_1}}',","    greaterThan: '{{label}} debe de ser un número mayor que {{var_1}}',","    greaterThanEqualTo: '{{label}} debe de ser un número mayor o igual a {{var_1}}',","    string: '{{label}} debe de ser de tipo \"string\"',","    numeric: '{{label}} debe de ser un valor numérico',","    matchesField: '{{label}} debe de ser exactamente igual a {{var_1}}',","    different: '{{label}} debe de ser diferente a {{var_1}}',","","    // Underscore Predicates","    date: '{{label}} debe de ser una fecha',","    equal: '{{label}} no es igual a {{var_1}}',","    'boolean': '{{label}} debe de ser de tipo \"boolean\"',","    empty: '{{label}} debe de estar vacío',","    array: '{{label}} debe de ser un arreglo',","","    // Regex specific messages.","    alpha: '{{label}} debe de estar compuesto únicamente por carácteres alfabéticos',","    alphaDash: '{{label}} debe de estar compuesto únicamente por caracteres alfanuméricos, guión y guión bajo',","    alphaNumeric: '{{label}} debe de estar compuesto únicamente por caracteres alfanuméricos',","    alphaUnderscore: '{{label}} debe de estar compuesto únicamente por caracteres alfanuméricos, guión y guión bajo',","    natural: '{{label}} debe de ser un número positivo',","    naturalNonZero: '{{label}} debe de ser un número mayor a cero',","    ipv4: '{{label}} debe de ser una dirección válida de IPv4',","    ipv6: '{{label}} debe de ser una dirección válida de IPv6',","    base64: '{{label}} debe de ser una cadena en base64',","    luhn: '{{label}} debe de ser un número válido de tarjeta de crédito',","    uuid: '{{label}} debe de ser un uuid válido',","","    // If there is no validation provided for an item, use this generic line.","    fallback: 'Las validaciones para {{label}} fallaron'","  }","","}"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/ru.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/ru.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":59,"column":1}}},"branchMap":{},"code":["module.exports = {","","  accepted: ['on', 'yes', 1, '1', true, 'true', 'да'],","","  labels: {},","","  messages: {","","    // Custom Predicates","    accepted: '{{label}} должно быть да, on, yes, true или 1',","    email: '{{label}} должно быть валидным email адресом',","    exactLength: 'Длина {{label}} должна быть {{var_1}} символов',","    exists: '{{label}} должно быть определено',","    required: '{{label}} обязательно',","    minLength: '{{label}} должно быть не короче {{var_1}} символов',","    maxLength: '{{label}} не должно быть длинее {{var_1}} символов',","    lessThan: '{{label}} должно быть числом меньше чем {{var_1}}',","    lessThanEqualTo: '{{label}} должно быть числом, меньше или равным {{var_1}}',","    greaterThan: '{{label}} должно быть числом, больше чем {{var_1}}',","    greaterThanEqualTo: '{{label}} должно быть числом, больше или равным {{var_1}}',","    between: '{{label}} должно быть числом между {{var_1}} и {{var_2}}',","    range: '{{label}} должно быть числом, не менее {{var_1}} и не более {{var_2}}',","    contains: '{{label}} должно содержать {{var_1}}',","    string: '{{label}} должно быть \"string\"',","    numeric: '{{label}} должно быть числом',","    matchesField: '{{label}} должно точно совпадать с {{var_1}}',","    different: '{{label}} должно быть отлично {{var_1}}',","    isPlainObject: '{{label}} должно быть объектом',","","    // Underscore Predicates","    date: '{{label}} должно быть датой',","    equal: '{{label}} не совпадает с {{var_1}}',","    'boolean': '{{label}} должно быть булевым',","    empty: '{{label}} должно быть пустым',","    array: '{{label}} должно быть массивом',","    'null': '{{label}} должно быть \"null\"',","    'NaN': '{{label}} должно быть \"NaN\"',","    finite: '{{label}} должно быть числом',","    'function': '{{label}} должно быть функцией',","    'arguments': '{{label}} должно быть типа \"arguments\"',","    regExp: '{{label}} должно быть регулярным выражением',","","    // Regex specific messages.","    alpha: '{{label}} должно включать только алфавитные символы',","    alphaDash: '{{label}} должно включать только алфавитные символы, нижнее подчеркивание, или тире',","    alphaNumeric: '{{label}} должно состоять только из цифр',","    alphaUnderscore: '{{label}} должно включать только алфавитные символы, нижнее подчеркивание, или тире',","    natural: '{{label}} должно быть положительным числом',","    naturalNonZero: '{{label}} должно быть числом больше нуля',","    ipv4: '{{label}} должно быть валидным IPv4 адресом',","    ipv6: '{{label}} должно быть валидным IPv6 адресом',","    base64: '{{label}} должно быть валидной base64 строкой',","    luhn: '{{label}} должно быть валидным номером кредитной карты',","    uuid: '{{label}} должно быть валидным уникальным идентификатором (uuid)',","","    // If there is no validation provided for an item, use this generic line.","    fallback: '{{label}} не прошло валидацию'","  }","}",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/fr.js":{"path":"/home/travis/build/npmtest/node-npmtest-checkit/node_modules/checkit/lang/fr.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":60,"column":1}}},"branchMap":{},"code":["module.exports = {","","  accepted: ['on', 'yes', 1, '1', true, 'true'],","","  labels: {},","","  messages: {","","    // Custom Predicates","    accepted: 'Le champ {{label}} doit être yes, on, true, ou 1',","    email: 'Le champ {{label}} doit être une adresse mail valide',","    exactLength: 'Le champ {{label}} doit avoir une longueur exacte de {{var_1}} caractères',","    exists: 'Le champ {{label}} doit être défini',","    required: 'Le champ {{label}} est requis',","    minLength: 'Le champ {{label}} doit avoir une longueur minimum de {{var_1}} caractères',","    maxLength: 'Le champ {{label}} ne doit pas dépasser {{var_1}} caractères',","    lessThan: 'Le champ {{label}} doit être un nombre inférieur à {{var_1}}',","    lessThanEqualTo: 'Le champ {{label}} doit être un nombre inférieur ou égal à {{var_1}}',","    greaterThan: 'Le champ {{label}} doit être un nombre supérieur à {{var_1}}',","    greaterThanEqualTo: 'Le champ {{label}} doit être un nombre supérieur ou égal à {{var_1}}',","    between: 'Le champ {{label}} doit être un nombre compris entre {{var_1}} et {{var_2}}',","    range: 'Le champ {{label}} doit être un nombre supérieur ou égal à {{var_1}} ou inférieur ou égal à {{var_2}}',","    contains: 'Le champ {{label}} doit contenir {{var_1}}',","    string: 'Le champ {{label}} doit être de type \"string\"',","    numeric: 'Le champ {{label}} doit être une valeur numérique',","    matchesField: 'Le champ {{label}} doit doit correspondre exactement à {{var_1}}',","    different: 'Le champ {{label}} doit être différent de {{var_1}}',","    isPlainObject: 'Le champ {{label}} doit être un \"plain object\"',","","    // Underscore Predicates","    date: 'Le champ {{label}} doit être une date',","    equal: 'Le champ {{label}} ne correspond pas à {{var_1}}',","    'boolean': 'Le champ {{label}} doit être de type \"booléen\"',","    empty: 'Le champ {{label}} doit être vide',","    array: 'Le champ {{label}} doit être un tableau',","    'null': 'Le champ {{label}} doit être \"null\"',","    'NaN': 'Le champ {{label}} doit être \"NaN\"',","    finite: 'Le champ {{label}} doit être un nombre fini',","    'function': 'Le champ {{label}} doit être une fonction',","    'arguments': 'Le champ {{label}} doit être un objet \"argument\" javascript',","    regExp: 'Le champ {{label}} doit être un objet d\\'expression régulière javascript',","","    // Regex specific messages.","    alpha: 'Le champ {{label}} ne doit contenir que des caractères alphabétiques',","    alphaDash: 'Le champ {{label}} ne doit contenir que des caractères alpha-numériques, des underscores, ou des tirets',","    alphaNumeric: 'Le champ {{label}} ne doit contenir que des caractères alpha-numériques',","    alphaUnderscore: 'Le champ {{label}} ne doit contenir que des caractères alpha-numériques, des underscores, ou des tirets',","    natural: 'Le champ {{label}} doit être un nombre positif',","    naturalNonZero: 'Le champ {{label}} doit être un nombre supérieur à zéro',","    integer: 'Le champ {{label}} doit être un entier',","    ipv4: 'Le champ {{label}} doit être une chaîne IPv4 valide',","    ipv6: 'Le champ {{label}} doit être une adresse IPv6 valide',","    base64: 'Le champ {{label}} doit être une chaîne en base64',","    luhn: 'Le champ {{label}} doit être un numéro de carte de crédit valide',","    uuid: 'Le champ {{label}} doit être un numéro de série valide',","","    // If there is no validation provided for an item, use this generic line.","    fallback: 'L\\'étape de validation du champ {{label}} a échoué'","  }","}",""],"l":{"1":1}}}